substitutions:
  board_type: "esp32doit-devkit-v1"
  board_framework: "arduino"
  device_name: "workshop"
  device_desc: "Temp Humidity Sensor"
  device_area: "Workshop"
  humidity_threshold_initial: "65"
  humidity_target_initial: "60"
  max_daily_stepdown_initial: "0.5"
  display_address: "0x27"
  display_dimensions: "16x2"

esphome:
  name: $device_name
  comment: Temp Humidity Sensor
  area: $device_area
  on_boot:
    - logger.log:
        level: DEBUG
        format: 'Humidity threshold is set to %d'
        args: ['id(humidity_threshold)']
    - logger.log:
        level: DEBUG
        format: 'Humidity target is set to %d'
        args: ['id(humidity_target)']
    - logger.log:
        level: DEBUG
        format: 'Max Daily step-down is set to %d'
        args: ['id(max_daily_stepdown)']
    - logger.log:
        level: DEBUG
        format: 'Dry Programme Activation is set to %d'
        args: ['id(dry_prog_active)']

esp32:
  board: $board_type
  framework:
    type: $board_framework

logger:

api:
  encryption:
    key: !secret ha_api_key

ota:
  - platform: esphome
    password: !secret ota_flash_pass

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pw
  ap:
    ssid: ESPhome Fallback Hotspot
    password: !secret wifi_fallback_pw

captive_portal:

i2c:
  frequency: 400kHz

output:
  - platform: ledc
    pin: GPIO04
    id: fan_control
    frequency: 25000 Hz
    min_power: 0%
    max_power: 100%

fan:
  - platform: speed
    output: fan_control
    name: "Dehumidifier"
    id: dehumid_fan
    restore_mode: ALWAYS_OFF
    on_turn_on:
    - switch.turn_on: dehumid_relay
    on_turn_off:
    - switch.turn_off: dehumid_relay

display:
  - platform: lcd_pcf8574
    dimensions: $display_dimensions
    address: $display_address
    lambda: |-
      it.printf(0, 0, "T:%2.1fC", id(sht_temp).state);
      it.printf(0, 1, "H:%2.1f%% > %2.1f%%", id(sht_humidity).state, id(sht45_humidity_target).state);

time:
  - platform: homeassistant
    id: homeassistant_time

web_server:
  port: 80
  version: 3

sensor:

  - platform: wifi_signal
    name: WiFi Strength
    update_interval: 60s

  - platform: sht4x
    temperature:
      name: "Temperature"
      id: "sht_temp"
    humidity:
      name: "Humidity"
      id: "sht_humidity"
      on_value:
        then:
          - script.execute: dehumidifier_action
    update_interval: 60s

  - platform: homeassistant
    name: "Humidity Threshold - Upper"
    entity_id: input_number.sht45_humidity_threshold
    id: sht45_humidity_threshold
    unit_of_measurement: "%"
    device_class: "humidity"
    internal: false
    accuracy_decimals: 1
    on_value:
      then:
        if:
          condition: 
            lambda: 'return id(humidity_threshold) != int(x);'
          then:
            - logger.log:
                level: DEBUG
                format: 'Humidity threshold changed from %d to %d'
                args: ['id(humidity_threshold)', 'int(x)']
            - globals.set:
                id: humidity_threshold
                value: !lambda 'return int(x);'

  - platform: homeassistant
    name: "Humidity Target"
    entity_id: input_number.sht45_humidity_target
    id: sht45_humidity_target
    unit_of_measurement: "%"
    device_class: "humidity"
    internal: false
    accuracy_decimals: 1
    on_value:
      then:
        if:
          condition: 
            lambda: 'return id(humidity_target) != int(x);'
          then:
            - logger.log:
                level: DEBUG
                format: 'Humidity target changed from %d to %d'
                args: ['id(humidity_target)', 'int(x)']
            - globals.set:
                id: humidity_target
                value: !lambda 'return int(x);'

  - platform: homeassistant
    name: "Max Daily Step-Down (Humidity)"
    entity_id: input_number.sht45_max_daily_stepdown
    id: sht45_max_daily_stepdown
    unit_of_measurement: "%"
    device_class: "humidity"
    internal: false
    accuracy_decimals: 1
    on_value:
      then:
        if:
          condition: 
            lambda: 'return id(max_daily_stepdown) != float(x);'
          then:
            - logger.log:
                level: DEBUG
                format: 'Max Daily Step-Down (Humidity) changed from %f to %f'
                args: ['id(max_daily_stepdown)', 'float(x)']
            - globals.set:
                id: max_daily_stepdown
                value: !lambda 'return float(x);'

  - platform: homeassistant
    name: "Set point Active"
    entity_id: input_boolean.sht45_setpoint_active
    id: sht45_setpoint_active
    internal: true
    on_value:
      then:
        if:
          condition: 
            lambda: 'return int(id(setpoint_active)) != int(bool(x));'
          then:
            - logger.log:
                level: DEBUG
                format: 'Set point activity changed from %d to %d'
                args: ['int(id(setpoint_active))', 'int(bool(x))']
            - globals.set:
                id: setpoint_active
                value: !lambda 'return bool(x);'

  - platform: pulse_counter
    pin:
      number: GPIO23
    name: Dehumidifier Fan Speed (RPM)
    id: fan_pulse
    unit_of_measurement: 'RPM'
    filters:
      - multiply: 0.5
    count_mode:
      rising_edge: INCREMENT
      falling_edge: DISABLE
    update_interval: 30s

binary_sensor:
  - platform: template
    name: "Humidity Setpoint Status"
    id: setpoint_active_sensor
    lambda: |-
      if (id(setpoint_active)) {
        return true;
      } else {
        return false;
      }

switch:
  - platform: gpio
    pin: 
      number: GPIO18
    name: "Dehumidifier Relay"
    id: dehumid_relay
    device_class: switch
    restore_mode: RESTORE_DEFAULT_OFF
    internal: true
    on_turn_on:
    - fan.turn_on: dehumid_fan
    on_turn_off:
    - fan.turn_off: dehumid_fan

script:
  id: dehumidifier_action
  then:
    - if:
        condition:
          lambda: 'return (int(id(sht_humidity).state) > id(humidity_threshold) && id(setpoint_active));'
        then:
          - logger.log: 
              format: 'The humidity (%d) is over the threshold (%d). Switching dehumidifier on.'
              args: ['int(id(sht_humidity).state)', 'id(humidity_threshold)']
          - switch.turn_on: dehumid_relay
          - delay: 30s
        else:
          - logger.log:
              format: 'The humidity (%d) is under the threshold (%d) or the setpoint is not activated. Switching dehumidifier off.'
              args: ['int(id(sht_humidity).state)', 'id(humidity_threshold)']
          - switch.turn_off: dehumid_relay

globals:
  - id: humidity_threshold
    type: int
    restore_value: true
    initial_value: $humidity_threshold_initial
  - id: humidity_target
    type: int
    restore_value: true
    initial_value: $humidity_target_initial
  - id: max_daily_stepdown
    type: float
    restore_value: true
    initial_value: $max_daily_stepdown_initial
  - id: dry_prog_active
    type: bool
    restore_value: true
    initial_value: "false"
  - id: dry_prog_start
    type: time_t
    restore_value: true
    initial_value: ""
  - id: setpoint_active
    type: bool
    restore_value: true
    initial_value: "false"
  - id: dehumid_suspend
    type: bool
    restore_value: true
    initial_value: "false"